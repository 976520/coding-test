#include <iostream>
using namespace std;

int 개수, 길이, 시간;
int 위치[3001], 방향[3001];

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> 개수 >> 길이;
    for (int i = 1; i <= 개수; i++) {
        cin >> 위치[i] >> 방향[i];
    }
    int i = 1;

    while (i < 개수) {
        if (위치[i] == 길이 || 위치[i + 1] == 길이) {
            i++;
            continue;
        }

        int 현재위치왼쪽, 현재위치오른쪽, 현재방향 = 방향[i];
        int 다음위치왼쪽, 다음위치오른쪽, 다음방향 = 방향[i + 1];
        int 현재움직임 = 시간 % ((길이 - 위치[i]) * 2);
        if (현재움직임 >= 길이 - 위치[i]) {
            현재움직임 -= 길이 - 위치[i];
            현재방향 ^= 1; //비트 XOR 연산 -> 현재방향 XOR 0001
        }
        if (현재방향) {
            현재위치왼쪽 = 현재움직임;
            현재위치오른쪽 = 현재움직임 + 위치[i];
        } else {
            현재위치왼쪽 = 길이 - 현재움직임 - 위치[i];
            현재위치오른쪽 = 길이 - 현재움직임;
        }

        int 다음움직임 = 시간 % ((길이 - 위치[i + 1]) * 2);
        if (다음움직임 >= 길이 - 위치[i + 1]) {
            다음움직임 -= 길이 - 위치[i + 1];
            다음방향 ^= 1;
        }
        if (다음방향) {
            다음위치왼쪽 = 다음움직임;
            다음위치오른쪽 = 다음움직임 + 위치[i + 1];
        } else {
            다음위치왼쪽 = 길이 - 다음움직임 - 위치[i + 1];
            다음위치오른쪽 = 길이 - 다음움직임;
        }

        if (max(현재위치왼쪽, 다음위치왼쪽) <= min(현재위치오른쪽, 다음위치오른쪽)) {
            i++;
        } else {
            시간++;
        }
    }

    cout << 시간;
}
