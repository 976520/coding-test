import sys
input = sys.stdin.readline

def 초기화(노드번호, 시작인덱스, 종료인덱스):
    if 시작인덱스 == 종료인덱스:
        if 숫자리스트[시작인덱스] % 2 == 0:
            세그먼트트리[노드번호][0] = 1
        else:
            세그먼트트리[노드번호][1] = 1
    else:
        중간인덱스 = (시작인덱스 + 종료인덱스) // 2
        초기화(노드번호 * 2, 시작인덱스, 중간인덱스)
        초기화(노드번호 * 2 + 1, 중간인덱스 + 1, 종료인덱스)
        세그먼트트리[노드번호] = [세그먼트트리[노드번호 * 2][0] + 세그먼트트리[노드번호 * 2 + 1][0],
                                세그먼트트리[노드번호 * 2][1] + 세그먼트트리[노드번호 * 2 + 1][1]]
    return 세그먼트트리[노드번호]

def 업데이트(노드번호, 시작인덱스, 종료인덱스, 갱신인덱스, 새로운값):
    if 갱신인덱스 < 시작인덱스 or 갱신인덱스 > 종료인덱스:
        return

    if 시작인덱스 == 종료인덱스:
        if 새로운값 % 2 == 0:
            세그먼트트리[노드번호] = [1, 0]
        else:
            세그먼트트리[노드번호] = [0, 1]
        return 세그먼트트리[노드번호]

    중간인덱스 = (시작인덱스 + 종료인덱스) // 2
    업데이트(노드번호 * 2, 시작인덱스, 중간인덱스, 갱신인덱스, 새로운값)
    업데이트(노드번호 * 2 + 1, 중간인덱스 + 1, 종료인덱스, 갱신인덱스, 새로운값)
    세그먼트트리[노드번호] = [세그먼트트리[노드번호 * 2][0] + 세그먼트트리[노드번호 * 2 + 1][0], 세그먼트트리[노드번호 * 2][1] + 세그먼트트리[노드번호 * 2 + 1][1]]

def 쿼리(노드번호, 시작인덱스, 종료인덱스, 왼쪽범위, 오른쪽범위):
    if 왼쪽범위 > 종료인덱스 or 오른쪽범위 < 시작인덱스:
        return [0, 0]

    if 왼쪽범위 <= 시작인덱스 and 오른쪽범위 >= 종료인덱스:
        return 세그먼트트리[노드번호]

    중간인덱스 = (시작인덱스 + 종료인덱스) // 2
    왼쪽노드쿼리 = 쿼리(노드번호 * 2, 시작인덱스, 중간인덱스, 왼쪽범위, 오른쪽범위)
    오른쪽노드쿼리 = 쿼리(노드번호 * 2 + 1, 중간인덱스 + 1, 종료인덱스, 왼쪽범위, 오른쪽범위)

    return [왼쪽노드쿼리[0] + 오른쪽노드쿼리[0], 왼쪽노드쿼리[1] + 오른쪽노드쿼리[1]]


숫자개수 = int(input())
세그먼트트리 = [[0, 0] for _ in range(숫자개수 * 4)]

숫자리스트 = list(map(int, input().split()))

초기화(1, 0, 숫자개수 - 1)

for _ in range(int(input())):
    쿼리유형, 첫번째인덱스, 두번째인덱스 = map(int, input().split())

    if 쿼리유형 == 1:
        if 숫자리스트[첫번째인덱스 - 1] % 2 == 두번째인덱스 % 2:
            숫자리스트[첫번째인덱스 - 1] = 두번째인덱스
            continue
        else:
            업데이트(1, 0, 숫자개수 - 1, 첫번째인덱스 - 1, 두번째인덱스)
            숫자리스트[첫번째인덱스 - 1] = 두번째인덱스
    elif 쿼리유형 == 2:
        print(쿼리(1, 0, 숫자개수 - 1, 첫번째인덱스 - 1, 두번째인덱스 - 1)[0])
    else:
        print(쿼리(1, 0, 숫자개수 - 1, 첫번째인덱스 - 1, 두번째인덱스 - 1)[1])
